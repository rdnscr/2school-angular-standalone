@use '@angular/material' as mat;
@import '@angular/material/theming';
@import 'variables';
// Plus imports for other components in your app.

@include mat.all-component-typographies();
@include mat.core();

// Custom 2BIT style palette
$mat-twobit: (
    50: $p50,
    100: $p100,
    200: $p200,
    300: $p300,
    400: $p400,
    500: $p500,
    600: $p600,
    700: $p700,
    800: $p800,
    900: $p900,
    A100: $A100,
    A200: $A200,
    A400: $A400,
    A700: $A700,
    contrast: (
        50: $black-87-opacity,
        100: $black-87-opacity,
        200: $black-87-opacity,
        300: $black-87-opacity,
        400: $black-87-opacity,
        500: $black-87-opacity,
        600: $black-87-opacity,
        700: $black-87-opacity,
        800: $black-87-opacity,
        900: $black-87-opacity,
        A100: $black-87-opacity,
        A200: $black-87-opacity,
        A400: $black-87-opacity,
        A700: $black-87-opacity,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$twobit-app-primary: mat.define-palette($mat-twobit);
$twobit-app-accent:  mat.define-palette(mat.$grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$twobit-app-warn:    mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$twobit-app-theme: mat.define-light-theme((color: (
  primary: $twobit-app-primary,
  accent: $twobit-app-accent,
  warn: $twobit-app-warn
  )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($twobit-app-theme);

$primary: map-get($twobit-app-theme, primary);
$accent: map-get($twobit-app-theme, accent);
$foreground: map-get($twobit-app-theme, foreground);
